#!/bin/bash

# PayPal Backend Quick Test Script
# T·∫°o user test v√† l·∫•y JWT token ƒë·ªÉ test payment APIs

set -e

echo "üß™ PayPal Backend Quick Test"
echo "============================"
echo ""

BASE_URL="http://localhost:3008/payment"
AUTH_URL="http://localhost:3001/auth"

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Test data
TEST_EMAIL="paypal_test_$(date +%s)@example.com"
TEST_PASSWORD="Test123456"

echo "üìù T·∫°o user test..."
REGISTER_RESPONSE=$(curl -s -X POST $AUTH_URL/register \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$TEST_EMAIL\",
    \"password\": \"$TEST_PASSWORD\",
    \"fullName\": \"PayPal Test User\"
  }")

echo "$REGISTER_RESPONSE" | jq . || echo "Response: $REGISTER_RESPONSE"

echo ""
echo "üîê Login ƒë·ªÉ l·∫•y JWT token..."
LOGIN_RESPONSE=$(curl -s -X POST $AUTH_URL/login \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$TEST_EMAIL\",
    \"password\": \"$TEST_PASSWORD\"
  }")

JWT_TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.access_token // empty')

if [ -z "$JWT_TOKEN" ]; then
  echo -e "${RED}‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c JWT token${NC}"
  echo "Response: $LOGIN_RESPONSE" | jq .
  exit 1
fi

echo -e "${GREEN}‚úÖ Login th√†nh c√¥ng${NC}"
echo "Token: ${JWT_TOKEN:0:30}..."
echo ""

# Test 1: Get plans
echo "üì¶ Test 1: L·∫•y danh s√°ch g√≥i subscription..."
PLANS=$(curl -s $BASE_URL/plans)
PLAN_COUNT=$(echo "$PLANS" | jq 'length')
echo -e "${GREEN}‚úÖ C√≥ $PLAN_COUNT g√≥i subscription${NC}"
echo "$PLANS" | jq -r '.[] | "  - \(.plan): $\(.price)"'
echo ""

# Test 2: Get current subscription
echo "üë§ Test 2: Xem subscription hi·ªán t·∫°i..."
SUBSCRIPTION=$(curl -s $BASE_URL/subscription \
  -H "Authorization: Bearer $JWT_TOKEN")
CURRENT_PLAN=$(echo "$SUBSCRIPTION" | jq -r '.plan')
echo -e "${GREEN}‚úÖ G√≥i hi·ªán t·∫°i: $CURRENT_PLAN${NC}"
echo ""

# Test 3: Create PayPal order
echo "üí≥ Test 3: T·∫°o PayPal order (PREMIUM plan)..."
CREATE_ORDER=$(curl -s -X POST $BASE_URL/create-order \
  -H "Authorization: Bearer $JWT_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "plan": "PREMIUM",
    "description": "Test Premium Subscription"
  }')

ORDER_ID=$(echo "$CREATE_ORDER" | jq -r '.orderId // empty')
APPROVAL_URL=$(echo "$CREATE_ORDER" | jq -r '.approvalUrl // empty')

if [ -z "$ORDER_ID" ]; then
  echo -e "${RED}‚ùå Kh√¥ng t·∫°o ƒë∆∞·ª£c order${NC}"
  echo "$CREATE_ORDER" | jq .
  exit 1
fi

echo -e "${GREEN}‚úÖ T·∫°o order th√†nh c√¥ng${NC}"
echo "  Order ID: $ORDER_ID"
echo "  Amount: \$$(echo "$CREATE_ORDER" | jq -r '.amount')"
echo ""
echo -e "${YELLOW}üìã Approval URL (m·ªü link n√†y ƒë·ªÉ thanh to√°n):${NC}"
echo "  $APPROVAL_URL"
echo ""

# Test 4: Get transactions
echo "üìä Test 4: Xem l·ªãch s·ª≠ giao d·ªãch..."
TRANSACTIONS=$(curl -s $BASE_URL/transactions \
  -H "Authorization: Bearer $JWT_TOKEN")
TX_COUNT=$(echo "$TRANSACTIONS" | jq 'length')
echo -e "${GREEN}‚úÖ C√≥ $TX_COUNT giao d·ªãch${NC}"
echo "$TRANSACTIONS" | jq -r '.[] | "  - Order: \(.paypalOrderId) | Status: \(.status) | Amount: $\(.amount)"'
echo ""

# Summary
echo "============================"
echo -e "${GREEN}‚úÖ T·∫•t c·∫£ tests PASSED!${NC}"
echo ""
echo "üìù Th√¥ng tin ƒë·ªÉ test ti·∫øp:"
echo "  Email: $TEST_EMAIL"
echo "  Password: $TEST_PASSWORD"
echo "  JWT Token: $JWT_TOKEN"
echo "  Order ID: $ORDER_ID"
echo ""
echo "üîó B∆∞·ªõc ti·∫øp theo:"
echo "  1. M·ªü Approval URL trong browser"
echo "  2. Login b·∫±ng PayPal sandbox account:"
echo "     Email: sb-tvqwj41683258@personal.example.com"
echo "  3. Click 'Pay Now'"
echo "  4. Ch·∫°y l·ªánh capture:"
echo ""
echo "     curl -X POST $BASE_URL/capture-order \\"
echo "       -H \"Authorization: Bearer $JWT_TOKEN\" \\"
echo "       -H \"Content-Type: application/json\" \\"
echo "       -d '{\"orderId\": \"$ORDER_ID\"}'"
echo ""
